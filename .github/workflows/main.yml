name: CI - Build and Push to Artifact Registry

on:
  push:
    branches:
      - main  # Trigger the CI on push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set environment variable for the image tag
      - name: Set image tag
        run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      # Step 3: Authenticate to Google Cloud using Workload Identity Federation
      - id: 'auth'
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/new-github-actions/providers/new-github-actions
          service_account: new-svc-acc-9@hello-project-439605-s1.iam.gserviceaccount.com
          export_environment_variables: true

      # Step 4: Configure Docker to use gcloud as a credential helper for Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: |
          echo "${{ steps.auth.outputs.access_token }}" | docker login -u oauth2accesstoken --password-stdin us-central1-docker.pkg.dev

      # Step 5: Build and push Docker image for app1 to Artifact Registry
      - name: Build and Push Docker Image
        run: |
          # Define the image name
          image="us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/new-apps-repo/app1:${{ env.IMAGE_TAG }}"

          # Build the Docker image
          docker build -t "$image" "."

          # Push the Docker image
          docker push "$image"

      # Step 6: Clone the GitOps repository
      - name: Clone GitOps repository
        run: |
          git clone https://${{ secrets.MY_GITHUB_USER }}:${{ secrets.MY_GITHUB_TOKEN }}@github.com/snaveed1/new-gitops.git
          cd new-gitops
          git checkout non-prod
         
          git config user.name "snaveed1"
          git config user.email "shaikhnaved10346@gmail.com"

          # Step 7: Update values.yaml with the new image tag
          yq e '.image.tag = "{{ github.sha }}"' -i app11/values.yaml

          git add app11/values.yaml
          git commit -m "updating image tag"  
          git push --set-upstream origin non-prod
